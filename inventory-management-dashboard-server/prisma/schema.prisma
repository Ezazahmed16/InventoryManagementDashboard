// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  user  String @id
  name  String
  email String
}

model Products {
  productId     String      @id
  name          String
  price         Float
  ratting       Float?
  stockQuantity Int
  Sales         Sales[]
  Purchases     Purchases[]
}

model Sales {
  saleId       String   @id
  productId    String?
  timestamp    DateTime
  quantity     Int
  unitPrice    Float
  totalAmmount Float

  Products Products? @relation(fields: [productId], references: [productId])
}

model Purchases {
  purchaseId String   @id
  productId  String?
  timestamp  DateTime
  quantity   Int
  unitCost   Float
  totalCost  Float

  Products Products? @relation(fields: [productId], references: [productId])
}

model Expense {
  expenseId String   @id
  category  String
  ammount   Float
  timeStamp DateTime
}

model SalesSummary {
  salesSummaryId   String   @id
  totalValue       Float
  changePercentage Float
  date             DateTime
}

model PurchaseSummary {
  purchaseSummaryId String   @id
  totalPurchased    Float
  changePercentage  Float
  date              DateTime
}

model ExpenseSummery {
  expenseSummeryId  String              @id
  totalExpense      Float
  date              DateTime
  ExpenseByCategory ExpenseByCategory[]
}

model ExpenseByCategory {
  expenseByCategoryId String   @id
  expenseSummeryId    String?
  date                DateTime
  category            BigInt
  ammount             BigInt

  ExpenseSummery ExpenseSummery? @relation(fields: [expenseSummeryId], references: [expenseSummeryId])
}
